from sno_py.buffer import FileBuffer
from typing import Optional


class SnoEdit:
    def __init__(self) -> None: ...
    def _create_base_dirs(self) -> None: ...
    def _load_snorc(self) -> None: ...
    def add_buffer(self, buffer: SnooBuffer) -> None: ...
    def close_all_buffers(self, forced: bool = ...) -> bool: ...
    def close_current_buffer(self, buffer: Optional[FileBuffer] = ..., forced: bool = ...) -> bool: ...
    async def create_file_buffer(self, path: str, encoding: str = ...) -> None: ...
    async def enter_command_mode(self) -> None: ...
    def get_buffer_index(self, path: Optional[str] = ..., display_name: Optional[str] = ...) -> Optional[int]: ...
    def leave_command_mode(self) -> None: ...
    async def process_command(self) -> None: ...
    def refresh_layout(self) -> None: ...
    async def run(self) -> None: ...
    def save_all_buffers(self) -> None: ...
